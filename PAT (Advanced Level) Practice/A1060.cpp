/*PTA A1060
题意
	给出两个数，问：将他们写成保留N位小数的科学计数法后是否相等。
	如果相等，则输出YES,并给出该转换结果；如果不等输出NO，并分别给出两个数的转换结果。 
样例解释
	样例1
	12300与12358.9的保留三位小数的科学计数法均为0.123x105,输出YES。
	样例2
	120与128的保留三位小数的科学计数法分别为0.120x103与0.128x103,输出NO。
思路
	题目的要求是将两个数改写为科学计数法的形式,然后判断它们是否相等。而科学计数
	法的写法一定是如下格式:0.a1a2a3...x10e,因此只需要获取到科学计数法的本体部分a1a2a3
	与指数e,即可判定两个数在科学计数法形式下是否相等。
	然后考虑数据本身,可以想到按整数部分是否为0来分情况讨论,即
	1. 0.a1a2a3...
	2. b1b2...bm.a1a2a3...
	现在来考虑这两种情况的本体部分与指数分别是什么(以下讨论按有效位数为3进行)。
	对 1 来说,由于在小数点后面还可能跟着若干个0,因此本体部分是从小数点后第一个非零
	位开始的3位(即akak+1ak+2,其中ak是小数点后第一个非零位3,而指数则是小数点与该非
	零位之间0的个数的相反数(例如0.001的指数为-2)。在分析清楚后,具体的代码实现逻辑
	也成形了,即令指数e的初值为0,然后在小数点后每出现一个0,就让e减1,直到到达最
	后一位(因为有可能是小数点后全为0的情况)或是出现非零位为止。
	然后来看 2 的情况,假设b不为零。很显然,其本体部分就是从b开始的3位,而指数
	则是小数点前的数位的总位数m。具体实现中,则可以令指数e的初值为0,然后从前往后
	枚举,只要不到达最后一位(因为有可能没有小数点)或是出现小数点,就让e加1。
	那么,如何区分给定的数是属于 1 还是 2 事实上,题目隐含了一个trick:数据有可
	能出现前导0,即在 1 或者 2 的数据之前还会有若干个0(例如000.01或是00123.45)。为了
	应对这种情况,需要在输入数据后的第一步就是去除所有前导0,这样就可以按去除前导零
	后的字符串的第一位是否是小数点来判断其属于 1 或是 2 。
	由于需要让两个数的科学计数法进行比较,因此必须把各自的本体部分单独提取出来。
	比较合适的方法是,在按上面步骠处理 1 时,将前导零、小数点、第一个非零位前的0全部
	删除,只保留第一个非零位开始的部分(即akak,iak,2---);在处理 2 时,将前导零、小数点
	删除,保留从b开始的部分(即bb2---buala2as---)。这些利除操作可以在上面获取指数e
	的过程中同时做到(使用string的erase函数)。之后便可以对剩余的部分取其有效位数的部
	分赋值到新字符串中,长度不够有效位数则在后面补0。
	最后只要比较本体部分与指数是否都相等,就可以决定输出 YES 或 NO。
*/
#include <string>
#include <iostream>
using namespace std;
int n;	//有效位数 
string deal(string s,int& e){
	int k=0;	//s的下标 
	while(s.length() >0 && s[0]=='0'){
		s.erase(s.begin());	//去掉s的前导零后是小数点 
	} 
	if(s[0]=='.'){	//去掉前导零后是小数点 
		s.erase(s.begin());	//去掉小数点
		while(s.length() >0 && s[0]=='0'){
			s.erase(s.begin());	//去掉小数点后非零位前的所有零
			e--; 
		} 
	} else {	//去掉前导零后不是小数点，则找到后面的小数点删除 
		while(k <s.length() && s[k] != '.'){	//寻找小数点
			k++;
			e++;	//只要不碰到小数点就让指数e++ 
		}
		if(k<s.length()) {	//while结束后 k < s.length()，说明碰到小数点了 
			s.erase(s.begin() + k);	//把小数点删除 
		}
	}
	if(s.length()==0){
		e=0;	//如果去除前导零后s的长度为 0 ，说明这个数是 0  
	} 
	int num=0;
	k=0;
	string res;
	while(num <n){
		if(k < s.length())	res += s[k++];	//只要有数字，就加到res末尾
		else res += '0';	//否则res 末尾加 0  
		num++;	//精度加 1  
	}
	return res; 
} 
int main(){
	string s1,s2,s3,s4;
	cin>>n>>s1>>s2;
	int e1=0,e2=0;
	s3=deal(s1,e1);
	s4=deal(s2,e2);
	if(s3==s4 && e1==e2){	//主体相同且指数相同则yes 
		cout<<"YES 0."<<s3<<"*10^"<<e1<<endl;
	} else{
		cout<<"NO 0."<<s3<<"*10^"<<e1<<" 0."<<s4<<"*10^"<<e2<<endl;
	}
	return 0;
}

